const fs = require('fs');
const path = require('path');

const schemaJsonPath = path.join(__dirname, '../src/data/schema.json');
const schemaInlinePath = path.join(__dirname, '../src/data/schema-inline.js');

function loadSchema() {
  try {
    const raw = fs.readFileSync(schemaJsonPath, 'utf8');
    return JSON.parse(raw);
  } catch (error) {
    console.error('Failed to read src/data/schema.json', error);
    process.exit(1);
  }
}

function writeInlineSchema(schema) {
  const serializedSchema = JSON.stringify(schema, null, 2);
  const globalTarget = 'typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : null';
  const inlineSource = [
    '// This file is auto-generated by tools/createInlineSchema.js. Do not edit manually.',
    '(function assignSchema(global) {',
    '  if (!global) {',
    '    return;',
    '  }',
    '  const schema = ' + serializedSchema + ';',
    '  if (typeof Object.freeze === "function") {',
    '    Object.freeze(schema);',
    '  }',
    '  global.CINE_POWER_PLANNER_DEVICE_SCHEMA = schema;',
    '  if (typeof module !== "undefined" && module.exports) {',
    '    module.exports = schema;',
    '  }',
    '})((' + globalTarget + '));',
    ''
  ].join('\n');
  fs.writeFileSync(schemaInlinePath, `${inlineSource}\n`);
  console.log('src/data/schema-inline.js generated');
}

writeInlineSchema(loadSchema());
